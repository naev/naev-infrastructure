# Build toolchain in build container to save space.
FROM registry.fedoraproject.org/fedora-minimal:latest AS build 

# Install Build dependencies and utilities.
RUN microdnf --nodocs --setopt=install_weak_deps=0 -y install bzip2 clang cmake git file findutils patch python3 \
    openssl openssl-devel xz-devel libxml2-devel llvm-devel uuid-devel unzip tar xz zlib-devel && \
    microdnf clean all && \
# Verify tool / language versions versions.
    echo "Verifying clang install" && \
    command -v clang && \
    clang --version && \
    echo "Verifying cmake install" && \
    command -v cmake && \
    cmake --version && \
    echo "Verifying python install" && \
    command -v python3 && \
    python3 --version

# Git clone libdmg-hfsplus repo
WORKDIR /usr/local/src
RUN git clone https://github.com/fanquake/libdmg-hfsplus.git
WORKDIR /usr/local/src/libdmg-hfsplus
RUN mkdir build && cd build && \
    cmake .. && \
    make && make install

# Git clone osxcross repo
WORKDIR /usr/local/src
RUN git clone https://github.com/tpoechtrager/osxcross.git

# Copy MacOS SDK tarball
COPY MacOSX10.13.sdk.tar.xz /usr/local/src/osxcross/tarballs

# Set MACOSX_DEPLOYMENT_TARGET
ENV MACOSX_DEPLOYMENT_TARGET "10.13"

# Build toolchain
WORKDIR /usr/local/src/osxcross
RUN TARGET_DIR=/usr/lib/osxcross UNATTENDED=1 ./build.sh

# Add osxcross to PATH
ENV PATH "$PATH:/usr/lib/osxcross/bin"

ENV OSXCROSS_MP_INC "1"

# Patch osxcross-macports script to workaround openssl or fedora moving ripemd-160 encryption to the 'legacy' provider
RUN sed -i 's/\bopenssl rmd160\b/openssl rmd160 -provider legacy/g' $(command -v osxcross-macports) && \
    sed -i 's/\bopenssl dgst -ripemd160 -verify\b/openssl dgst -provider default -provider legacy -ripemd160 -verify/g' $(command -v osxcross-macports)

# Install required build dependencies
RUN UNATTENDED=1 osxcross-macports install freetype glpk libsdl2 libsdl2_image libpng \
    libvorbis luajit openal-soft OpenBLAS pcre2 physfs SuiteSparse_CHOLMOD SuiteSparse_CXSparse webp -v && \
    UNATTENDED=1 osxcross-macports clear-cache

# Build final container
FROM registry.fedoraproject.org/fedora-minimal:latest

WORKDIR /
COPY --from=build /usr/lib/osxcross /usr/lib/osxcross 
COPY --from=build /usr/local/bin/dmg /usr/bin

LABEL org.opencontainers.image.authors "Naev Dev Team"
LABEL org.opencontainers.image.source "https://github.com/naev/naev-infrastructure"
LABEL org.opencontainers.image.description "Used to cross compile for macOS."

# Allows for determining what container scripts are run in.
ENV IMAGE_NAME "naev-macos"

# Add OSXCROSS to path
ENV PATH "$PATH:/usr/lib/osxcross/bin"

# Ensure macports includes are enabled by default
ENV OSXCROSS_MP_INC "1"

# Set MACOSX_DEPLOYMENT_TARGET
ENV MACOSX_DEPLOYMENT_TARGET "10.13"

# Set HOST for bundle.py script
ENV HOST "x86_64-apple-darwin17"

# Force appimages to extract to get around a lack of FUSE in docker. (without some ####ery at least.)
ENV APPIMAGE_EXTRACT_AND_RUN 1

# Install build tools.
RUN microdnf --nodocs --setopt=install_weak_deps=0 -y install clang cmake gettext genisoimage git llvm meson ninja-build python3-pip python3-pyyaml unzip tar xz zlib zip && \
    microdnf clean all && \
# Update Meson to a pre-release, due to a bug cross-compiling with link-time optimization enabled. (python3-pip is unnecessary once this step is.)
    python3 -m pip install git+https://github.com/UncombedCoconut/meson.git@8170743261d50420c1519bf27c4301086db59fa3 && \
# Verify tool version.
    echo "Verifying meson install" && \
    command -v meson && \
    meson --version && \
    echo "Verifying dmg install" && \
    command -v dmg && \
# Horrible hack: ensure a hardcoded header file path resolves.  
    rmdir /opt && ln -s /usr/lib/osxcross/macports/pkgs/opt /opt && \
# Set WORKDIR when you spin up the image.
    mkdir -p /tmp/naevBuild
WORKDIR /tmp/naevBuild
